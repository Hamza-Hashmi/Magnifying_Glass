// Generated by view binder compiler. Do not edit!
package com.example.magnifyingglass.magnifier.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.magnifyingglass.magnifier.R;
import com.example.magnifyingglass.magnifier.utils.LoupeView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ImageMagnifierScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FrameLayout adFrame;

  @NonNull
  public final ImageView bottomSeekBarBackground;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final ImageView btnCamera;

  @NonNull
  public final ImageView btnDelete;

  @NonNull
  public final ImageView btnEdit;

  @NonNull
  public final ImageView btnGallery;

  @NonNull
  public final ImageView btnSave;

  @NonNull
  public final ConstraintLayout clSeekbars;

  @NonNull
  public final ConstraintLayout clTools;

  @NonNull
  public final Guideline guideline5;

  @NonNull
  public final LoupeView imageView;

  @NonNull
  public final CardView layoutNative;

  @NonNull
  public final TextView llPlaceHolder;

  @NonNull
  public final TextView loupeRadiusLabel;

  @NonNull
  public final TextView loupeRadiusValueText;

  @NonNull
  public final TextView magnificientFactorLabel;

  @NonNull
  public final TextView magnificientFactorValueText;

  @NonNull
  public final ImageView moon;

  @NonNull
  public final RelativeLayout rlImageContainer;

  @NonNull
  public final SeekBar sbFactorBar;

  @NonNull
  public final SeekBar sbRadiusBar;

  @NonNull
  public final TextView seekBarLabel;

  @NonNull
  public final NativeAdLayoutLoaderSmallBinding shimmerFrameLayout;

  @NonNull
  public final ImageView sun;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final ImageView topSeekBarBackground;

  @NonNull
  public final ImageView zoomIn;

  @NonNull
  public final TextView zoomLabel;

  @NonNull
  public final ImageView zoomOut;

  private ImageMagnifierScreenBinding(@NonNull ConstraintLayout rootView,
      @NonNull FrameLayout adFrame, @NonNull ImageView bottomSeekBarBackground,
      @NonNull ImageView btnBack, @NonNull ImageView btnCamera, @NonNull ImageView btnDelete,
      @NonNull ImageView btnEdit, @NonNull ImageView btnGallery, @NonNull ImageView btnSave,
      @NonNull ConstraintLayout clSeekbars, @NonNull ConstraintLayout clTools,
      @NonNull Guideline guideline5, @NonNull LoupeView imageView, @NonNull CardView layoutNative,
      @NonNull TextView llPlaceHolder, @NonNull TextView loupeRadiusLabel,
      @NonNull TextView loupeRadiusValueText, @NonNull TextView magnificientFactorLabel,
      @NonNull TextView magnificientFactorValueText, @NonNull ImageView moon,
      @NonNull RelativeLayout rlImageContainer, @NonNull SeekBar sbFactorBar,
      @NonNull SeekBar sbRadiusBar, @NonNull TextView seekBarLabel,
      @NonNull NativeAdLayoutLoaderSmallBinding shimmerFrameLayout, @NonNull ImageView sun,
      @NonNull TextView titleText, @NonNull ImageView topSeekBarBackground,
      @NonNull ImageView zoomIn, @NonNull TextView zoomLabel, @NonNull ImageView zoomOut) {
    this.rootView = rootView;
    this.adFrame = adFrame;
    this.bottomSeekBarBackground = bottomSeekBarBackground;
    this.btnBack = btnBack;
    this.btnCamera = btnCamera;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.btnGallery = btnGallery;
    this.btnSave = btnSave;
    this.clSeekbars = clSeekbars;
    this.clTools = clTools;
    this.guideline5 = guideline5;
    this.imageView = imageView;
    this.layoutNative = layoutNative;
    this.llPlaceHolder = llPlaceHolder;
    this.loupeRadiusLabel = loupeRadiusLabel;
    this.loupeRadiusValueText = loupeRadiusValueText;
    this.magnificientFactorLabel = magnificientFactorLabel;
    this.magnificientFactorValueText = magnificientFactorValueText;
    this.moon = moon;
    this.rlImageContainer = rlImageContainer;
    this.sbFactorBar = sbFactorBar;
    this.sbRadiusBar = sbRadiusBar;
    this.seekBarLabel = seekBarLabel;
    this.shimmerFrameLayout = shimmerFrameLayout;
    this.sun = sun;
    this.titleText = titleText;
    this.topSeekBarBackground = topSeekBarBackground;
    this.zoomIn = zoomIn;
    this.zoomLabel = zoomLabel;
    this.zoomOut = zoomOut;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ImageMagnifierScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ImageMagnifierScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.image_magnifier_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ImageMagnifierScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.adFrame;
      FrameLayout adFrame = ViewBindings.findChildViewById(rootView, id);
      if (adFrame == null) {
        break missingId;
      }

      id = R.id.bottomSeekBarBackground;
      ImageView bottomSeekBarBackground = ViewBindings.findChildViewById(rootView, id);
      if (bottomSeekBarBackground == null) {
        break missingId;
      }

      id = R.id.btnBack;
      ImageView btnBack = ViewBindings.findChildViewById(rootView, id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btnCamera;
      ImageView btnCamera = ViewBindings.findChildViewById(rootView, id);
      if (btnCamera == null) {
        break missingId;
      }

      id = R.id.btnDelete;
      ImageView btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      ImageView btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      id = R.id.btnGallery;
      ImageView btnGallery = ViewBindings.findChildViewById(rootView, id);
      if (btnGallery == null) {
        break missingId;
      }

      id = R.id.btnSave;
      ImageView btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.clSeekbars;
      ConstraintLayout clSeekbars = ViewBindings.findChildViewById(rootView, id);
      if (clSeekbars == null) {
        break missingId;
      }

      id = R.id.clTools;
      ConstraintLayout clTools = ViewBindings.findChildViewById(rootView, id);
      if (clTools == null) {
        break missingId;
      }

      id = R.id.guideline5;
      Guideline guideline5 = ViewBindings.findChildViewById(rootView, id);
      if (guideline5 == null) {
        break missingId;
      }

      id = R.id.image_view;
      LoupeView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.layout_native;
      CardView layoutNative = ViewBindings.findChildViewById(rootView, id);
      if (layoutNative == null) {
        break missingId;
      }

      id = R.id.llPlaceHolder;
      TextView llPlaceHolder = ViewBindings.findChildViewById(rootView, id);
      if (llPlaceHolder == null) {
        break missingId;
      }

      id = R.id.loupe_radius_label;
      TextView loupeRadiusLabel = ViewBindings.findChildViewById(rootView, id);
      if (loupeRadiusLabel == null) {
        break missingId;
      }

      id = R.id.loupeRadiusValueText;
      TextView loupeRadiusValueText = ViewBindings.findChildViewById(rootView, id);
      if (loupeRadiusValueText == null) {
        break missingId;
      }

      id = R.id.magnificient_factor_label;
      TextView magnificientFactorLabel = ViewBindings.findChildViewById(rootView, id);
      if (magnificientFactorLabel == null) {
        break missingId;
      }

      id = R.id.magnificientFactorValueText;
      TextView magnificientFactorValueText = ViewBindings.findChildViewById(rootView, id);
      if (magnificientFactorValueText == null) {
        break missingId;
      }

      id = R.id.moon;
      ImageView moon = ViewBindings.findChildViewById(rootView, id);
      if (moon == null) {
        break missingId;
      }

      id = R.id.rlImageContainer;
      RelativeLayout rlImageContainer = ViewBindings.findChildViewById(rootView, id);
      if (rlImageContainer == null) {
        break missingId;
      }

      id = R.id.sbFactorBar;
      SeekBar sbFactorBar = ViewBindings.findChildViewById(rootView, id);
      if (sbFactorBar == null) {
        break missingId;
      }

      id = R.id.sbRadiusBar;
      SeekBar sbRadiusBar = ViewBindings.findChildViewById(rootView, id);
      if (sbRadiusBar == null) {
        break missingId;
      }

      id = R.id.seekBarLabel;
      TextView seekBarLabel = ViewBindings.findChildViewById(rootView, id);
      if (seekBarLabel == null) {
        break missingId;
      }

      id = R.id.shimmerFrameLayout;
      View shimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (shimmerFrameLayout == null) {
        break missingId;
      }
      NativeAdLayoutLoaderSmallBinding binding_shimmerFrameLayout = NativeAdLayoutLoaderSmallBinding.bind(shimmerFrameLayout);

      id = R.id.sun;
      ImageView sun = ViewBindings.findChildViewById(rootView, id);
      if (sun == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.topSeekBarBackground;
      ImageView topSeekBarBackground = ViewBindings.findChildViewById(rootView, id);
      if (topSeekBarBackground == null) {
        break missingId;
      }

      id = R.id.zoomIn;
      ImageView zoomIn = ViewBindings.findChildViewById(rootView, id);
      if (zoomIn == null) {
        break missingId;
      }

      id = R.id.zoomLabel;
      TextView zoomLabel = ViewBindings.findChildViewById(rootView, id);
      if (zoomLabel == null) {
        break missingId;
      }

      id = R.id.zoomOut;
      ImageView zoomOut = ViewBindings.findChildViewById(rootView, id);
      if (zoomOut == null) {
        break missingId;
      }

      return new ImageMagnifierScreenBinding((ConstraintLayout) rootView, adFrame,
          bottomSeekBarBackground, btnBack, btnCamera, btnDelete, btnEdit, btnGallery, btnSave,
          clSeekbars, clTools, guideline5, imageView, layoutNative, llPlaceHolder, loupeRadiusLabel,
          loupeRadiusValueText, magnificientFactorLabel, magnificientFactorValueText, moon,
          rlImageContainer, sbFactorBar, sbRadiusBar, seekBarLabel, binding_shimmerFrameLayout, sun,
          titleText, topSeekBarBackground, zoomIn, zoomLabel, zoomOut);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
